@using pruebaPelicula.Shared.Entity
@inject IJSRuntime jsRuntime
@inject IModalService modal
@using System.Collections.Generic;
@using System;

<EditForm Model="Actor" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>  
    <div class="container">
        <div class="form-group my-5">
            <div class="row">
                <div class="col col-sm-4 my-2">
                    <InputText @bind-Value="Actor.ActorName" placeholder="Nombre del actor o actriz."
                        class="form-control" />
                    <ValidationMessage For="@(() => Actor.ActorName)" />
                </div>
                @* <div class="col col-sm-4 my-2">
                    <label for="documentType">Tipo de Documento</label>
                    <InputSelect @bind-Value="Actor.DocumentType" class="form-control">
                    @foreach (var documentType in Enum.GetValues(typeof(DocumentType)))
                    {
                    <option>@documentType</option>
                    }
                    </InputSelect>
                    <ValidationMessage For="@(() => Actor.DocumentType)" />
                    </div> *@
                <div class="col col-sm-4 my-2">
                    <InputText @bind-Value="Actor.Document" placeholder="Número de documento."
                        class="form-control" />
                    <ValidationMessage For="@(() => Actor.Document)" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col col-sm-4 my-2">
                    <label for="BirthDate">Fecha de nacimiento</label>
                    <InputDate @bind-Value="Actor.BirthDate" id="BirthDate" class="form-control" />
                    <ValidationMessage For="@(() => Actor.BirthDate)" />
                </div> 
                @* <div class="col col-sm-4 my-2">
                    <label for="gender">Género</label>
                    <InputSelect @bind-Value="Actor.Gender" class="form-control">
                    @foreach (var gender in Enum.GetValues(typeof(Gender)))
                    {
                    <option>@gender</option>
                    }
                    </InputSelect>
                    <ValidationMessage For="@(() => Actor.Gender)" />
                    </div> *@
                <div class="col col-sm-4 my-2">
                    <label for="KnownCredits">Créditos</label>
                    <InputNumber @bind-Value="Actor.KnownCredits" id="KnownCredits" class="form-control" />
                    <ValidationMessage For="@(() => Actor.KnownCredits)" />
                </div>
                <div class="col col-sm-4 my-2">
                    <label for="Nominations">Nominaciones</label>
                    <InputNumber @bind-Value="Actor.Nominations" id="Nominations" class="form-control" />
                    <ValidationMessage For="@(() => Actor.Nominations)" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col col-sm-6 my-2">
                    <InputTextArea @bind-Value="Actor.Biography" @onkeyup="LlamarJavascript" id="Biografía" placeholder="Biografía." maxlength="500" class="form-control" style="height: 250px; width: 100%; resize: none;" />
                    <p id="ContadorCaracteres" class="mt-1 mb-0">Carácteres: 0 /500</p>
                    <ValidationMessage For="@(() => Actor.Biography)" />
                </div>
                <div class="col col-sm-6">
                    <div class="row">
                        <button type="button" class="btn btn-light my-auto mx-auto py-auto px-4" @onclick="@(() => modal.Show<UploadImageComponent>("Imagen"))">Insertar imagen del actor o actriz</button>
                    </div>
                    @* <div class="row mt-3 mx-0">
                        <MultipleSelector NoSelected="NoSelectedListModel" Selected="SelectedListModel" />
                    </div> *@
                </div> 
            </div>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-success">Aceptar</button>
            <button type="submit" class="btn btn-danger">Cancelar</button>
        </div>

    </div>
</EditForm>

@code {
    string imageURL;
    [Parameter] public Actor Actor { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Actor.Photo))
        {
            imageURL = Actor.Photo;
            Actor.Photo = null;
        }
    }

    private void ImageSelected(string imageB64)
    {
        Actor.Photo = imageB64;
        imageURL = null;
    }

    public void LlamarJavascript()
    {
        jsRuntime.InvokeVoidAsync("EstructuraHTML");
    }
}