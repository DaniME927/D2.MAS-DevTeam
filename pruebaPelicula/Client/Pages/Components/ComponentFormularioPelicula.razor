@inject IJSRuntime jsRuntime
@inject IModalService modal

<EditForm Model="@MovieModel" OnValidSubmit="@OnValidSubmit">

    <DataAnnotationsValidator />

    <div class="container">

        <div class="form-group mt-5">
            <div class="row">
                <div class="col col-sm-4 my-2">
                    <InputText @bind-Value="MovieModel.Name" placeholder="Nombre de la película." class="form-control" />
                    <ValidationMessage For="@(() => MovieModel.Name)" />
                </div>
                <div class="col col-sm-4 my-2">
                    <InputText @bind-Value="MovieModel.Trailer" placeholder="Enlace del trailer." class="form-control" />
                    <ValidationMessage For="@(() => MovieModel.Trailer)" />
                </div>
                <div class="col col-sm-4 my-2">
                    <InputCheckbox @bind-Value="MovieModel.EnCartelera" id="EnCartelera" class="form-check-label my-auto mx-1" />
                    <label for="EnCartelera" class="form-check-label my-auto mx-0">En Cartelera</label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col col-sm-4 my-2">
                    <label for="Score">Puntuación</label>
                    <InputNumber @bind-Value="MovieModel.Score" id="Score" min="0" max="10" class="form-control" />
                    <ValidationMessage For="@(() => MovieModel.Score)" />
                </div>
                <div class="col col-sm-4 my-2">
                    <label for="Premier">Fecha de estreno</label>
                    <InputDate @bind-Value="MovieModel.Premier" id="Premier" class="form-control" />
                    <ValidationMessage For="@(() => MovieModel.Premier)" />
                </div>
                <div class="col col-sm-4 my-2">
                        <label for="Duracion">Duración</label>
                        <div id="Duracion" class="form-group d-flex aling-items-center">
                        <InputNumber @bind-Value="MovieModel.DurationHour" min="0" max="9" class="form-control mr-1" style="max-width: 57px;" />
                        <p class="my-auto mr-4">h</p>
                        <InputNumber @bind-Value="MovieModel.DurationMinute" min="0" max="59" class="form-control mr-1" style="max-width: 57px;" />
                        <p class="my-auto">m</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col col-sm-6 my-2">
                    <InputTextArea @bind-Value="MovieModel.Sinopsis" @onkeyup="LlamarJavascript" id="Sinopsis" placeholder="Sinopsis." maxlength="500" class="form-control" style="height: 250px; width: 100%; resize: none;" />
                    <p id="ContadorCaracteres" class="mt-1 mb-0">Carácteres: 0 /500</p>
                    <ValidationMessage For="@(() => MovieModel.Sinopsis)" />
                </div>
                <div class="col col-sm-6 my-2">
                    <div class="row">
                        <button type="button" class="btn btn-light my-auto mx-auto py-auto px-4" @onclick="@(() => modal.Show<UploadImageComponent>("Imagen"))">Insertar portada de película</button>
                    </div>
                    <div class="row mt-3 mx-0 my-2">
                        <MultipleSelector NoSelected="NoSelectedListModel" Selected="SelectedListModel" />
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col col-sm-6 my-2">
                    <label>Actores</label>
                    <SelectorMultipleTypeaHead Context="actor" SearchMethod="BuscarActores" ElementosSeleccionados="ActoresSeleccionados">
                        <MyListTemplate>
                            @actor.ActorName
                        </MyListTemplate>
                        <MyResultTemplate>
                            <img style="width: 30px" src="@actor.Photo" />
                                @actor.ActorName
                        </MyResultTemplate>
                    </SelectorMultipleTypeaHead>
                </div>
            </div>
        </div>

        <div class="form-group mt-2 mb-5">
            <button type="submit" class="btn btn-success">Aceptar</button>
        </div>

    </div>
</EditForm>

@code {

    [Parameter] public Movie MovieModel { get; set; }
    [Parameter] public EventCallback OnValidSubmit {get; set; }
    [Parameter] public List<Category> NoSelectedList { get; set; }
    [Parameter] public List<Category> SelectedList { get; set; }
    [Parameter] public List<Actor> ActoresSeleccionados { get; set; } = new List<Actor>();
    private List<MultipleSelectorModel> NoSelectedListModel = new List<MultipleSelectorModel>();
    private List<MultipleSelectorModel> SelectedListModel = new List<MultipleSelectorModel>();
    private List<Actor> ListaActores = new List<Actor>();
    private List<Actor> FiltroActores = new List<Actor>();

    protected override void OnInitialized()
    {
        NoSelectedListModel = NoSelectedList.Select(x => new MultipleSelectorModel(x.Id.ToString(),x.Name)).ToList();
        SelectedListModel = SelectedList.Select(x => new MultipleSelectorModel(x.Id.ToString(),x.Name)).ToList();

        ListaActores = new List<Actor>(){
            new Actor(){Id=1, ActorName="Yaneth Mejía", Photo="https://pbs.twimg.com/profile_images/1079060744891785216/dAsFSbHH_400x400.jpg"},
            new Actor(){Id=2, ActorName="Carolina Marquez", Photo="https://archivo.autonoma.edu.co/sites/default/files/styles/medium/public/carolina-marquez-narvaez.jpg?itok=CcL43PAR"},
            new Actor(){Id=3, ActorName="Juan Esteban", Photo="https://cdn1.vectorstock.com/i/1000x1000/29/65/cinema-award-best-actor-flat-style-vector-13602965.jpg"},
        };
    }

    public void LlamarJavascript()
    {
        jsRuntime.InvokeVoidAsync("EstructuraHTML");
    }

    private async Task<IEnumerable<Actor>> BuscarActores(string searchText)
    {
        await Task.Delay(0);
        return FiltroActores = ListaActores.Where(x => x.ActorName.Contains(searchText)).ToList();   
    }

}